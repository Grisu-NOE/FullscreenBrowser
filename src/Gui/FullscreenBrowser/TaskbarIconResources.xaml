<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:At.FF.Krems.FullscreenBrowser"
                    xmlns:prop="clr-namespace:At.FF.Krems.FullscreenBrowser.Properties">
    
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <Separator />
        <MenuItem Header="{x:Static prop:Resources.logging_DE_AT }" Command="{Binding OpenLoggingDirectoryCommand}" />
        <MenuItem Header="{x:Static prop:Resources.clearCache_DE_AT }" Command="{Binding ClearBrowserCacheCommand}" />
        <MenuItem Header="{x:Static prop:Resources.Save_DE_AT}" Command="{Binding SaveConfigurationCommand}" />
        <Separator />
        <MenuItem Header="{x:Static prop:Resources.Close_DE_AT }" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>

    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="TaskbarIcon"
                    IconSource="TrayIcon.ico"
                    ToolTipText="Auf das Symbol klicken um das Menü von FullscreenBrowser zu öffnen"
                    ContextMenu="{StaticResource SysTrayMenu}"
                    MenuActivation="All">

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <local:TaskbarIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>